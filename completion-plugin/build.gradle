import org.jetbrains.intellij.tasks.RunIdeTask

plugins {
    id 'org.jetbrains.intellij' version '0.4.10'
}

dependencies {
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile project(':uast')
    compile project(':interpretator')
    compile project(':metrics-evaluator')
    compile project(':report-generators')
    compile project(':filter')
    testCompile("org.junit.jupiter:junit-jupiter-params:5.5.1")
    testCompile("org.junit.jupiter:junit-jupiter-api:5.5.1")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.5.1")
}

intellij {
    version '193.4778.7-EAP-SNAPSHOT'
    plugins "PythonCore:193.4778.7", "sh", 'java'
}

task runIdeHeadless (type: RunIdeTask) {
    jvmArgs '-Djava.awt.headless=true'
    args 'evaluate-completion'
    ideaDirectory = { runIde.ideaDirectory }
    pluginsDirectory = { runIde.pluginsDirectory }
    configDirectory = { runIde.configDirectory }
    systemDirectory = { runIde.systemDirectory }
    dependsOn = runIde.dependsOn
    group 'intellij'
}

runIde {
    jvmArgs '-Xmx1G'
}

patchPluginXml {
    sinceBuild '193'
    untilBuild '201.*'

    changeNotes """
        0.0.9 <br>
        <ul>
            <li>Line numbers in files reports</li>
            <li>Implement filters subsystem. Provide ability to filter locations out by package name</li>
            <li>Diff column for comparison of two evaluation results in report</li>
            <li>Toggle visibility of files without completion sessions in report</li>
            <li>Switching between lengths of prefix in files reports</li>
            <li>Save state of evaluation config in UI</li>
            <li>Save state of evaluation config after evaluation with results</li>
            <li>Improve stability of evaluation results in headless mode</li>
            <li>Gzip intermediate results of evaluation (actions, session, etc)</li>
            <li>Kill the process if something goes wrong in headless mode</li>
            <li>Fix lots of minor bug</li>
            <li>Though new unknown bugs were added :)</li>
        </ul>
        0.0.2 <br>
        <ul>
            <li>Headless mode</li>
        </ul>
        0.0.1 <br>
        <ul>
            <li>Support Java, Python and C#</li>
            <li>Support different strategies of queries generation: token types, context and prefix</li>
            <li>Support different quality metrics: Precision, Recall, F-Measure, Mean Reciprocal Rank and E-saved</li>
        </ul>
        """
}

test {
    useJUnitPlatform()
    test {
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }
    }
}